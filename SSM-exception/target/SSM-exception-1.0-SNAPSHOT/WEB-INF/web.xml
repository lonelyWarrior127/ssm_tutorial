<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  <!--  声明springmvc核心对象
        默认情况下：servlet对象在用户访问时创建
       访问地址后，保存文件没有找到 /WEB-INF/springmvc-servlet.xml
       错误原因：
          在servlet的init方法中，创建springmvc使用的容器对象WebApplicationContext.
          WebApplicationContext ctx = new ClassPathXmlWebApplicationContext(配置文件)
      配置文件你的默认路径：/WEB-INF/<servlet-name>-servlet.xml  (spring-config)

      自定义配置文件位置:
            <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
            </init-param>
  -->

  <!--  声明过滤器，框架提供，解决post请求中的乱码问题 forceRequestEncoding-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <!--    给过滤器属性赋值-->
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <!--强制请求对象request，使用encoding的编码方式    -->
    <init-param>
      <param-name>forceRequestEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
    <!--强制响应对象response，使用encoding的编码方式    -->
    <init-param>
      <param-name>forceResponseEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <!--强制所有请求，先经过过滤器处理    -->
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--自定义配置文件的位置    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
    <!--表示服务器tomcat创建对象的顺序，整数值，>=0 数值越小，创建对象的时间越早    -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--url-pattern：把一些请求交给指定的servlet处理
    使用中央调度器DispatcherServlet
      1. 使用扩展名方式 格式 *.xxx, xxx是自定义扩展名
          例如*.do *.action *.mvc等等。不能使用*.jsp
          http://localhost:8080/springmvc/some.do
          http://localhost:8080/springmvc/query.do
      2. 使用斜杠"/"
       -->
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>


</web-app>
